// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Y_euler_sim_cpp
arma::mat Y_euler_sim_cpp(arma::mat B, int n, int t, double Tt, arma::vec y0, double r, double alpha, double lambda, double sigmaV, double rho);
RcppExport SEXP _HestonEMcpp_Y_euler_sim_cpp(SEXP BSEXP, SEXP nSEXP, SEXP tSEXP, SEXP TtSEXP, SEXP y0SEXP, SEXP rSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP sigmaVSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type Tt(TtSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type sigmaV(sigmaVSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(Y_euler_sim_cpp(B, n, t, Tt, y0, r, alpha, lambda, sigmaV, rho));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HestonEMcpp_Y_euler_sim_cpp", (DL_FUNC) &_HestonEMcpp_Y_euler_sim_cpp, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_HestonEMcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
